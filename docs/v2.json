{
    "name": "CheckID v2",
    "github": "https://github.com/JorgeArguello1999/CheckID.git",
    "method": "POST",
    "file-type": "Only image files are accepted (e.g., .png, .jpg)",
  
    "compare2faces": {
      "form": {
        "file1": "file1.png (face image)",
        "file2": "file2.png (face image)"
      },
      "description": "Compares two face images and determines if they belong to the same person.",
      "answer": {
        "is_same": "bool (True if both faces belong to the same person)",
        "distance": "float (0.0 to 1.0, lower values mean higher similarity)",
        "encode_faces": [
          "Encoded data from the first image",
          "Encoded data from the second image"
        ]
      }
    },
  
    "binary_compare": {
      "form": {
        "file": "file.png (face image)",
        "binary": "string (hexadecimal encoding of another face image)"
      },
      "description": "Compares a face image with a hexadecimal string that represents the encoding of another face. Useful when comparing against a stored face encoding.",
      "answer": {
        "is_same": "bool (True if the image and the binary string represent the same person)",
        "distance": "float (0.0 to 1.0, lower values mean higher similarity)"
      }
    },
  
    "get_binary": {
      "form": {
        "file": "file.png (face image)"
      },
      "description": "Generates a binary (hexadecimal) encoding of the uploaded face image. This result can be saved and later used in comparisons.",
      "answer": "string (hexadecimal representation of the encoded face)"
    },
  
    "compare_binary": {
      "form": {
        "image": "file.png (face image)",
        "hex_file": "file.hex (hexadecimal file containing the facial encoding)"
      },
      "description": "Compares a face image with a hexadecimal file containing a facial encoding (generated by the '/get_binary/' endpoint). The hex file must be uploaded as a .hex file and is loaded using pickle.",
      "answer": {
        "is_same": "bool (True if the image and the hex file represent the same person)",
        "distance": "float (0.0 to 1.0, lower values indicate higher similarity)"
      }
    },

    "verify_dni": {
      "form":{
        "face_image": "file.png (face image)",
        "dni_image": "file.png (DNI image)",
        "dni_number": "string (DNI number, e.g., '12345678A')"
      },
      "description": "Verifies if the face in the provided image matches the face on the DNI image and checks if the DNI number is valid.",
      "answer": {
        "face_comparison": {
          "is_same": "bool (True if the face matches the DNI image)",
          "distance": "float (0.0 to 1.0, lower values mean higher similarity between faces)"
        },
        "dni_number": "string (the provided DNI number)",
        "dni_valid": "bool (True if the DNI number is valid)"
      }
    }
}
  